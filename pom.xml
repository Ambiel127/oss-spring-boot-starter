<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- 继承该依赖，可以少配置很多东西 -->
    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>

    <groupId>io.github.ambiel127</groupId>
    <artifactId>oss-spring-boot-starter</artifactId>
    <version>1.2</version>
    <name>oss-spring-boot-starter</name>
    <description>通用技术组件 - 对象存储OSS</description>


    <properties>
        <spring.boot.version>2.6.2</spring.boot.version>
        <java.version>1.8</java.version>
        <aliyun.oss.version>3.14.0</aliyun.oss.version>
        <minio.version>8.4.1</minio.version>
    </properties>


    <dependencies>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <version>${spring.boot.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring.boot.version}</version>
        </dependency>

        <!-- 配置文件点击可以跳转实体 -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
            <version>${spring.boot.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- aliyun oss -->
        <dependency>
            <groupId>com.aliyun.oss</groupId>
            <artifactId>aliyun-sdk-oss</artifactId>
            <version>${aliyun.oss.version}</version>
        </dependency>

        <!-- minio -->
        <dependency>
            <groupId>io.minio</groupId>
            <artifactId>minio</artifactId>
            <version>${minio.version}</version>
        </dependency>


    </dependencies>


    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>


    <!-- 开源许可证声明
    有很多不同的开源许可证
 Apache Version2.0 表示别人可以直接商用你的开源项目而无任何版权问题 -->
    <licenses>
        <license>
            <name>The Apache Software License, Version 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>


    <!--开源地址-->
    <scm>
        <connection>scm:git:https://github.com/Ambiel127/oss-spring-boot-starter.git</connection>
        <developerConnection>scm:git:https://github.com/Ambiel127/oss-spring-boot-starter.git</developerConnection>
        <url>https://github.com/Ambiel127/oss-spring-boot-starter</url>
    </scm>

    <!--  Issue地址  -->
    <issueManagement>
        <system>Github Issue</system>
        <url>https://github.com/Ambiel127/oss-spring-boot-starter/issues</url>
    </issueManagement>


    <!-- 开发者信息 -->
    <developers>
        <developer>
            <name>matianhao</name>
            <id>matianhao</id>
            <email>ambiel127@163.com</email>
            <roles>
                <role>Developer</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
    </developers>


    <!-- 发布的仓库地址，注意id的ossrh必须和上一步中setting.xml中配置的server的id一致 -->
    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

</project>
